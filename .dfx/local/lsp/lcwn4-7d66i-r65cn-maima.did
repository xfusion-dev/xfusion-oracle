type Symbol = text;

type Price = record {
  value: nat64;
  confidence: opt nat64;
  timestamp: nat64;
  source: text;
};

type Bar = record {
  timestamp: nat64;
  open: nat64;
  high: nat64;
  low: nat64;
  close: nat64;
  volume: opt nat64;
};

type Policy = record {
  aggregation: text;
  retain_history: nat32;
};

service : {
  get_price: (Symbol) -> (opt Price) query;
  get_prices: (vec Symbol) -> (vec opt Price) query;
  get_all_symbols: () -> (vec Symbol) query;
  get_snapshot_cert: () -> (vec record { Symbol; Price }, blob) query;

  get_range: (Symbol, nat64, nat64, text) -> (vec Bar) query;

  push_prices: (vec record { Symbol; Price }) -> (nat64);

  upsert_symbols: (vec Symbol) -> ();
  remove_symbols: (vec Symbol) -> ();
  set_policy: (Policy) -> ();
  set_allowed_updaters: (vec principal) -> ();
}